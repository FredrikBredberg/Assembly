.include "m328pdef.inc"
.cseg
.org 0 
.def temperatur = r23 // rör ej

reset:	

	//ser r16
	//out PORTD,r16
	rcall spi_master_init
	rcall LCD_init
	rcall tempterature_text
	rcall temp_lim
	rcall send_next_temp
	rcall button_init
	rcall minlim

	rjmp main_loop

button_init:

	ldi r22, 0b00001111
	out DDRD, r22
	ldi r22,0b11110000
	out PORTD, r22
	ldi r22, 0b11111110
	out DDRB, r22
	ldi r22,0b00000001
	out PORTB, r22

	ret

minlim:

	ldi XL, 10 // minsta gränsen
	ldi XH, 70 // högsta gränsen
	ret



spi_master_init:
	; SS, MOSI, MISO, SCK, RS pins outputs
	ldi r16, (1<<2) | (1<<3) | (1<<5) | (1 << 1)  | (0 << 4 ) | (1 << 6)
	out DDRB, r16
	; enable, master, clock rate fck/16
	ldi r16, (1<<SPE) | (1<<MSTR) | (1<<SPR0)
	out SPCR, r16
	ret
	
LCD_init:
	cbi PORTB, 1
	ldi r16, 0x39 ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x1D ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x50 ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x6C ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x7C ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x38 ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	
	ldi r16, 0x0F ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x01 ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay

	ldi r16, 0x06 ; load char to send
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms ; 0.5s delay	
	ret

main_loop:

	rcall move_cursor
	rcall read_temp_sensor
	rcall convertASCII
	rcall print_two_digits

	rcall move_cursor2
	rcall print_max_limit
	rcall convertASCII

	rcall move_cursor3
	rcall min_limit
	rcall convertASCIImin
	rcall print_min_temp

	rjmp main_loop


move_cursor2:
	ldi r16, 0b10010101
	cbi PORTB, 1
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	sbi PORTB, 1
	rcall delaymega
	ret

move_cursor3:

	ldi r16, 0b10011101
	cbi PORTB, 1
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	sbi PORTB, 1
	rcall delaymega
	ret
print_max_limit:

	ldi r19, 52 // största
	ldi r21, 48 // minsta
	mov r16, r19
	cbi PORTB, 2

	rcall spi_txrx
	sbi PORTB, 2
	mov r16, r21
	cbi PORTB, 2
	rcall spi_txrx

	sbi PORTB, 2
	ret
min_limit:
	sbi PORTB, 2

	in r17, PIND
	sbrs r17, 6
	rcall limchanger_low
	
	sbrs r17, 5
	rcall limchanger_high

	clr r20
	mov r20, XL

	ret
limchanger_low:
	inc XL

	ret

limchanger_high:
	dec XL
	
	ret

	
 read_temp_sensor:
 
	sbi PORTB, 6
	rcall delay500ms
	cbi PORTB, 6
	rcall spi_txrx
	rcall delay500ms
	mov r24, r16
	lsl r24
	rcall spi_txrx
	
	mov r18, r16

	lsl r18
	ROL r18
	andi r18, 0b00000001
	or r24, r18
	sbi PORTB,6

	mov r23, r24
	clr r18
	clr r24
	sbi PORTB,6

	clr r20
	mov r20, r23
	
	
	ret


convertASCII:
	;push r23


loop10s:
	
	cpi r20, 10 // 
	brlo loop1s
	inc r24
	subi r20, 10


	rjmp loop10s

loop1s: 
	cpi r20, 0
	breq doneconvert
	inc r18
	dec r20
	rjmp loop1s


doneconvert: 
	;pop r23

	ret	


;print_cur_temp:

;	rcall print_two_digits
;	ret

print_min_temp:



	rcall print_two_digits
	ret

print_max_temp:


; --------------------------------------------------------------
; --------------------------------------------------------------


print_two_digits:
	subi r18, -48 // minsta talet
	subi r24, -48 // största talet
	mov r16, r24
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	mov r16, r18
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2

	ret

done:
	ret
	

spi_txrx:
	out SPDR, r16

wait_txrx:
	in r16, SPSR
	sbrs r16, SPIF
	rjmp wait_txrx
	in r16, SPDR
	ret

	rjmp send_text

send_text:

	sbi PORTB, 1
	cbi PORTb, 2

	lpm r16, Z+
	cpi r16, 0
	breq done

	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms

	rjmp send_text

tempterature_text:

	ldi ZL, low(mystring*2)
	ldi ZH, high(mystring*2)

	sbi PORTB, 1
	cbi PORTb, 2

	lpm r16, Z+
	cpi r16, 0
	breq done

	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms

	rjmp send_text


send_next_temp:
	ldi ZL, low(temp_string*2)
	ldi ZH, high(temp_string*2)
	sbi PORTB, 1
	cbi PORTb, 2

	lpm r16, Z+
	cpi r16, 0
	breq done

	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms

	rjmp send_text

move_cursor:
	ldi r16, 0b10001101
	cbi PORTB, 1
	cbi PORTB, 2
	rcall spi_txrx
	sbi PORTB, 2
	sbi PORTB, 1

	ret
	
temp_lim:
	ldi ZL, low(temp_limits*2)
	ldi ZH, high(temp_limits*2)
	sbi PORTB, 1
	cbi PORTb, 2

	lpm r16, Z+
	cpi r16, 0
	breq done

	rcall spi_txrx
	sbi PORTB, 2
	rcall delay500ms

	rjmp send_text


stop:
	rjmp stop

delay500ms:	
	push r23
	push r21
	push r22	; 			
	ldi		r23, 255
	ldi		r21, 1
	ldi		r22, 1
delay500ms1:
	dec		r23
	brne	delay500ms1
delay500ms2:
	dec		r21
	ldi		r23, 255
	brne	delay500ms1
delay500ms3:
	dec		r22
	ldi		r21, 255
	brne	delay500ms1

	pop r22
	pop r21
	pop r23
	ret	

delaymega:
	push r23
	push r21
	push r22		; 			
	ldi		r23, 255
	ldi		r21, 1
	ldi		r22, 5
delaymega1:
	dec		r23
	brne	delaymega1
ddelaymega2:
	dec		r21
	ldi		r23, 255
	brne	delaymega1
delaymega3:
	dec		r22
	ldi		r21, 255
	brne	delaymega1
	pop r22
	pop r21
	pop r23
	ret	


mystring : 
.db "Temperature:",  0


temp_limits:
.db "    max: XX min:   ",0

temp_string:
.db "    Alarm:XX ", 0





.dseg
.org SRAM_START
mystring2: .byte 12
Temperature2: .byte 2
temp_string2: .byte 12
temp_limits2: .byte 12
